//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class World: APIModel {

    public var title: String

    public var data: File

    public var anchors: [Anchor]?

    public var id: String?

    public init(title: String, data: File, anchors: [Anchor]? = nil, id: String? = nil) {
        self.title = title
        self.data = data
        self.anchors = anchors
        self.id = id
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        title = try container.decode("title")
        data = try container.decode("data")
        anchors = try container.decodeArrayIfPresent("anchors")
        id = try container.decodeIfPresent("id")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(title, forKey: "title")
        try container.encode(data, forKey: "data")
        try container.encodeIfPresent(anchors, forKey: "anchors")
        try container.encodeIfPresent(id, forKey: "id")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? World else { return false }
      guard self.title == object.title else { return false }
      guard self.data == object.data else { return false }
      guard self.anchors == object.anchors else { return false }
      guard self.id == object.id else { return false }
      return true
    }

    public static func == (lhs: World, rhs: World) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
